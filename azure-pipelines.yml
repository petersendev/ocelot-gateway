# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  imageName: 'petersendev/ocelot-gateway'

steps:

- task: petersendev.dotnet-global-tool-installer.DotnetGlobalToolInstaller.DotnetGlobalToolInstaller@0
  displayName: '.NET Core Global Tool'
  inputs:
    name: nbgv

- script: nbgv cloud -c -a
  displayName: Set Version
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))

- task: Docker@1
  displayName: docker login
  inputs:    
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: DockerHub
    command: login

- script: docker build -t $(imageName):$(NBGV_SemVer1) OcelotGateway
  displayName: docker build

- script: docker tag $(imageName):$(NBGV_SemVer1) $(imageName):dev
  displayName: docker tag dev
  condition: and(succeeded(), eq(variables['NBGV_PublicRelease'], false))

- script: |
    docker tag $(imageName):$(NBGV_SemVer1) $(imageName):latest
    docker push $(imageName):$(NBGV_SemVer1)
    docker push $(imageName):latest
  displayName: docker tag and push $(NBGV_SemVer1) and latest
  condition: and(succeeded(), eq(variables['NBGV_PublicRelease'], true))

- script: |
    docker tag $(imageName):$(NBGV_SemVer1) $(imageName):pre
    docker push $(imageName):pre
  displayName: docker tag and push pre
  condition: and(succeeded(), eq(variables['NBGV_PublicRelease'], true), ne(variables['NBGV_PrereleaseVersion'], ''))

- script: |
    docker tag $(imageName):$(NBGV_SemVer1) $(imageName):stable
    docker push $(imageName):stable
  displayName: docker tag and push stable
  condition: and(succeeded(), eq(variables['NBGV_PublicRelease'], true), eq(variables['NBGV_PrereleaseVersion'], ''))